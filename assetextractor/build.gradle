/*
 * assetextractor/build.gradle
 *
 * Copyright (C) 2020, 2021, 2023 Vilius Sutkus'89 <ViliusSutkus89@gmail.com>
 *
 * AssetExtractor-Android is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as published by
 * the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

group = 'com.viliussutkus89'

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

android {
    namespace = "com.viliussutkus89.android.assetextractor"
    compileSdk 34

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 34

        versionCode 22
        versionName project.version

        archivesBaseName = rootProject.name

        consumerProguardFiles 'proguard-rules.pro'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.7.0'

    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    //#UNCOMMENT-DURING-STAGING#implementation 'com.viliussutkus89:assetextractor-android:#STAGING-VERSION#'
    // The line above is used by the ci-scripts/prepareLibraryForStagingRepository
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                artifactId rootProject.name
                version = rootProject.version

                pom {
                    name = rootProject.name
                    description = 'Android Asset Extractor'
                    url = 'https://github.com/ViliusSutkus89/AssetExtractor-Android'
                    packaging = 'aar'
                    inceptionYear = '2020'
                    licenses {
                        license {
                            name = 'GPL-3.0-only'
                            url = 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                            distribution = 'repo'
                        }
                    }
                    developers {
                        developer {
                            id = "ViliusSutkus89"
                            name = "Vilius Sutkus"
                            email = "ViliusSutkus89@gmail.com"
                        }
                    }
                    scm {
                        url = 'https://github.com/ViliusSutkus89/AssetExtractor-Android'
                        connection = 'https://github.com/ViliusSutkus89/AssetExtractor-Android.git'
                    }
                }
            }
        }
    }

    // This may look ugly...
    // but useInMemoryPgpKeys expects valid keys even with required { false }
    if (System.getenv('SIGNING_KEY')) {
        signing {
            required { true }
            useInMemoryPgpKeys(System.getenv('SIGNING_KEY'), System.getenv('SIGNING_PASS'))
            sign publishing.publications.release
        }
    }
}

task createEmptyFolderInTestAssetsForSpecificUnitTest {
    doLast {
        mkdir "$projectDir/src/androidTest/assets/emptyDirectory"
    }
}

tasks.whenTaskAdded {
    if (it.name == 'generateDebugAndroidTestAssets') {
        it.dependsOn createEmptyFolderInTestAssetsForSpecificUnitTest
    }
}
